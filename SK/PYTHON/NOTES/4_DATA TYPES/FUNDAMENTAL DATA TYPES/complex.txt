				===================================================
						4. complex
				===================================================
=>Here complex is one of the Pre-Defined Class and treated as Fundamental Data Type.
=>The purpose of complex Data Type is that "To Store Complex Values OR Imaginary Values".
=>The General Notation of comple value is show bellow.
				
						 a+bj    OR      a-bj
		=>Here 'a' is called "Real Part"
		=>here 'b' is called "Imaginary Part"
		=>here the letter 'j' represents sqrt(-1)  OR   sqr(j) = -1
=>Internally, The real and imaginary parts are treated as float type values 
=>To get real and imginary values from complex object, we have Two Pre-Defined Attributes present in Complex Object. They are
				1) real
				2) imag
		Syntax:   complexobj.real---->gives real part of complex object
				complexobj.imag---->gives imaginary part of complex object

=>On the Complex values, we can perform Arithmetic Operations like Addition, Substraction, Multplication...etc
-----------------------------------------------------------------------------------------------------------------------------------------------------------
Examples
-----------------------------------------------------------------------------------------------------------------------------------------------------------
>>> a=2+3j
>>> print(a,type(a))----------------(2+3j) <class 'complex'>
>>> b=2-3j
>>> print(b,type(b))----------------(2-3j) <class 'complex'>
>>> c=-2+4j
>>> print(c,type(c))-----------------(-2+4j) <class 'complex'>
------------------------------------------------------------------
>>> a=2.3+4.6j
>>> print(a,type(a))--------------(2.3+4.6j) <class 'complex'>
>>> b=-2.5-5.6j
>>> print(b,type(b))--------------(-2.5-5.6j) <class 'complex'>
>>> c=2+3.5j
>>> print(c,type(c))--------------(2+3.5j) <class 'complex'>
>>> d=2.5+4j
>>> print(d,type(d))-------------(2.5+4j) <class 'complex'>
----------------------------------------------------------------------------------
>>> a=3j
>>> print(a,type(a))--------------3j <class 'complex'>
>>> b=3.5j
>>> print(b,type(b))--------------3.5j <class 'complex'>
>>> c=-3j
>>> print(c,type(c))-------------  (-0-3j) <class 'complex'>
>>> d=-3.4j
>>> print(d,type(d))------------- (-0-3.4j) <class 'complex'>
-----------------------------------------------------------------------------------
>>> a=2+3j
>>> print(a,type(a))--------------(2+3j) <class 'complex'>
>>> print(a.real)------------------2.0
>>> print(a.imag)----------------3.0
---------------------------------
>>> a=-2.3-3.4j
>>> print(a,type(a))--------------(-2.3-3.4j) <class 'complex'>
>>> print(a.real)-------------------  -2.3
>>> print(a.imag)-----------------  -3.4
>>> a=2+3.6j
>>> print(a,type(a))--------------   (2+3.6j) <class 'complex'>
>>> print(a.real)------------------   2.0
>>> print(a.imag)-----------------   3.6
>>> a=2j
>>> print(a,type(a))--------------   2j <class 'complex'>
>>> print(a.real)-------------------   0.0
>>> print(a.imag)-----------------  2.0
>>> a=-3.5j
>>> print(a,type(a))---------------  (-0-3.5j) <class 'complex'>
>>> print(a.real)---------------------   -0.0
>>> print(a.imag)----------------------  -3.5
>>> a=0+0j
>>> print(a,type(a))-------------------- 0j <class 'complex'>
>>> print(a.real)------------------------ 0.0
>>> print(a.imag)----------------------- 0.0
----------------------------------------------------------
>>> a=2+3j
>>> print(a.real)------------2.0
>>> print(a.imaginary)---------AttributeError: 'complex' object has no attribute 'imaginary'
-----------------------------------------------------------------------------------------------------------------------------------------------------------
>>> a=2+3j
>>> b=3+4j
>>> c=a+b
>>> print(c,type(c))------------(5+7j) <class 'complex'>
>>> a=2+3j
>>> b=-4-3j
>>> c=a+b
>>> print(c,type(c))-----------(-2+0j) <class 'complex'>
---------------------------------
>>> a=2+3j
>>> b=3+4j
>>> c=a*b
>>> print(c,type(c))----------(-6+17j) <class 'complex'>
------------------------------------------------------------------------------------------------------------------------------------------------
>>> Truej=2+3j
>>> a=True+Truej
>>> print(a,type(a))-----------(3+3j) <class 'complex'>
================================================x=====================================